# androidx.test.core Kotlin extensions

package(
    default_visibility = [
        "//:__subpackages__",
    ],
)

licenses(["notice"])  # Apache License 2.0

load("@io_bazel_rules_kotlin//kotlin:kotlin.bzl", "kt_android_library")

kt_android_library(
    name = "core",
    srcs = glob(
        ["**/*.kt"],
    ),
    deps = [
        "//:androidx_lifecycle_common",
        "//core",
    ],
)

load("//build_extensions:release.bzl", "axt_release_lib")

# Group of targets to use to produce release binary
android_library(
    name = "core_release_lib",
    exports = [
        ":core",
    ],
)

# Generate rules for the release artifacts. This generates three targets
# genrule output: core_release_no_deps.jar and core_release.aar
# a java_library target libcore_release_no_deps
axt_release_lib(
    name = "core_release",
    custom_package = "androidx.test.core.ktx",
    keep_spec = "androidx/test/core|META-INF/androidx.test.core.kotlin_module",
    overlapping_jars = [
        "//core/java/androidx/test/core:core_release_no_deps.jar",
    ],
    remove_spec = "androidx/test/core/ktx/R[$$\\.]|androidx/test/core/R[$$\\.]",
    resource_files = glob(
        ["res/**/*"],
    ),
    deps = [
        ":core_release_lib",
    ],
)

load("//build_extensions:maven_repo.bzl", "maven_artifact")
load("//build_extensions:axt_versions.bzl", "ANDROIDX_LIFECYCLE_VERSION", "ANDROIDX_VERSION", "CORE_VERSION", "RUNNER_VERSION")

maven_artifact(
    name = "core_maven_artifact",
    src = ":core_release.aar",
    artifact_deps = [
        "androidx.test:core:%s" % CORE_VERSION,
        "androidx.lifecycle:lifecycle-common:%s" % ANDROIDX_LIFECYCLE_VERSION,
    ],
    artifact_id = "core-ktx",
    group_id = "androidx.test",
    last_updated = "20181029000000",
    src_jar = ":libcore-src.jar",
    version = "%s" % CORE_VERSION,
)
